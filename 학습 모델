{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"name":"YOLOv4_ver6.ipynb","provenance":[{"file_id":"1c0mXeYSa9HxcT4Y5g1vKzo1v37PAgMr6","timestamp":1621682822651},{"file_id":"1sSMPbCAZMjG1sCpCMEk0Xk2snZPOACwS","timestamp":1617106452626},{"file_id":"1NCdD6JU_H3i0TUiDj3Inh5B8ntsnxNXc","timestamp":1614058034283}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"vk7cw5wuYi9F"},"source":["1. YOLOv4 사용 준비 과정"]},{"cell_type":"code","metadata":{"id":"fS1Ro-oOcbJj"},"source":["#드라이브 연동\n","from google.colab import drive\n","drive.mount('/content/gdrive', force_remount=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2WznXOUYVgie"},"source":["#darknet은 드라이브에 다운 받아서 사용 (드라이브에 저장하지 않을 시, 연결이 끊기는 경우 chart.png 파일이 날아감)\n","#darknet clone\n","!git clone https://github.com/AlexeyAB/darknet.git\n","%cd darknet\n","\n","#make 파일 변경\n","!sed -i 's/OPENCV=0/OPENCV=1/' Makefile\n","!sed -i 's/GPU=0/GPU=1/' Makefile\n","!sed -i 's/CUDNN=0/CUDNN=1/' Makefile\n","!sed -i 's/CUDNN_HALF=0/CUDNN_HALF=1/' Makefile\n","!sed -i 's/LIBSO=0/LIBSO=1/' Makefile #webcam 사용을 위한 부분\n","!make\n","\n","#darknet에 대한 권한 변경\n","!chmod 755 darknet"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rCZW9LHEWD2G"},"source":["# detection 결과를 포함한 이미지를 띄우는 함수\n","def ImShow(path):\n","    import cv2\n","    import matplotlib.pyplot as plt\n","    %matplotlib inline\n","\n","    image = cv2.imread(path)\n","    height, width = image.shape[:2]\n","    resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)\n","    \n","    fig = plt.gcf()\n","    fig.set_size_inches(10,10)\n","    plt.axis(\"off\")\n","    plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))\n","    plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CdJ16jelan8t"},"source":["2. custom data로 학습 진행하기"]},{"cell_type":"code","metadata":{"id":"nkHcDsOpcnOm"},"source":["#custom data 가져오기\n","!unzip /content/gdrive/MyDrive/yolov4_result_code/ver4/v4_dataset.zip -d /content/gdrive/MyDrive/yolov4_result_code/ver6/V6/"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BfzAFu12mWqD"},"source":["!unzip /content/gdrive/MyDrive/yolov4_result_code/ver6/noise.zip -d /content/gdrive/MyDrive/yolov4_result_code/ver6/V6/"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AjZH2JW4bJ3d","executionInfo":{"status":"ok","timestamp":1621344216821,"user_tz":-540,"elapsed":120500,"user":{"displayName":"양은서","photoUrl":"","userId":"13524925174389274877"}},"outputId":"c321c722-0202-4912-8966-189c57c91142"},"source":["#image 개수 확인, 각 리스트에는 이미지의 경로가 저장\n","%cd /\n","from glob import glob\n","img_list1 = glob('/content/gdrive/MyDrive/졸프/yolov4_result_code/ver6/V6/*.jpg')\n","print(len(img_list1)) #3988"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/\n","3988\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XyF6xKmlsDAv","executionInfo":{"status":"ok","timestamp":1621344228717,"user_tz":-540,"elapsed":2524,"user":{"displayName":"양은서","photoUrl":"","userId":"13524925174389274877"}},"outputId":"0f500177-54ad-4f2f-8c0c-2168e75bad39"},"source":["#train용 이미지들의 경로와 valid용 이미지들의 경로가 적혀있는 텍스트 파일 생성 (이미지 분류가 안 된 경우)\n","from sklearn.model_selection import train_test_split\n","\n","train_img_list,val_img_list = train_test_split(img_list1,test_size=0.1,random_state=2000)\n","print(len(train_img_list),len(val_img_list))\n","\n","with open('/content/gdrive/MyDrive/졸프/yolov4_result_code/ver6/train.txt','w') as f:\n","    f.write('\\n'.join(train_img_list)+'\\n')\n","with open('/content/gdrive/MyDrive/졸프/yolov4_result_code/ver6/val.txt','w') as f:\n","    f.write('\\n'.join(val_img_list)+'\\n')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["3589 399\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c6NopGc-uO2E","executionInfo":{"elapsed":4941,"status":"ok","timestamp":1619851569601,"user":{"displayName":"양은서","photoUrl":"","userId":"11771374411932328607"},"user_tz":-540},"outputId":"ff452f94-1acc-4e91-8f17-01a9939cfbcd"},"source":["#class의 이름을 저장하는 파일 생성 후 저장\n","%cd /content/gdrive/MyDrive/yolov4_result_code/ver6\n","!cat > custom.names"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/content/gdrive/.shortcut-targets-by-id/1SAwERZE4uY_PyzSH73xTBhZYtaCG7IrT/yolov4_result_code/ver6\n","^C\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tkx8Jqiyu4E6","executionInfo":{"elapsed":27648,"status":"ok","timestamp":1619767500328,"user":{"displayName":"양은서","photoUrl":"","userId":"13524925174389274877"},"user_tz":-540},"outputId":"e60ed2cd-8427-4125-8c57-6326437181ad"},"source":["#data 파일 생성 후 저장\n","!cat > custom.data"],"execution_count":null,"outputs":[{"output_type":"stream","text":["^C\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"aWCbLokHEMMr"},"source":["!mkdir backup\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"PF3LZUiX0FIa"},"source":["yolov4-custom.cfg 파일 수정 진행\n","(참고: https://hanryang1125.tistory.com/16)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"auEKMHB6tSLL","executionInfo":{"status":"ok","timestamp":1621344519034,"user_tz":-540,"elapsed":740,"user":{"displayName":"양은서","photoUrl":"","userId":"13524925174389274877"}},"outputId":"94ed3ed4-1959-4272-e84a-aa7a7997fb35"},"source":["%cd /content/darknet/"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/content/darknet\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6gx9ZT3tK_xZ"},"source":["!wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.conv.137"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NmkfGt334pS7"},"source":["!chmod +x /content/darknet"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rz5vDWlnbKZ2"},"source":["#학습 시작\n","! ./darknet detector train /content/gdrive/MyDrive/졸프/yolov4_result_code/ver6/custom.data cfg/yolov4-custom.cfg /content/gdrive/MyDrive/졸프/yolov4_result_code/ver6/backup/yolov4-custom_last.weights -dont_show"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"T0lDDJFzplYy"},"source":["#loss를 나타내는 그래프\n","ImShow('chart.png')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9Uh9WmmvTVZS","executionInfo":{"status":"ok","timestamp":1620100041040,"user_tz":-540,"elapsed":22745,"user":{"displayName":"­이경민(엘텍공과대학 소프트웨어학부)","photoUrl":"","userId":"10201857876106042298"}},"outputId":"0026b5ae-4f43-492e-a978-2e6c5120b1d0"},"source":["!./darknet detector map /content/gdrive/MyDrive/yolov4_result_code/ver6/custom.data cfg/yolov4-custom.cfg /content/gdrive/MyDrive/yolov4_result_code/ver6/backup/yolov4-custom_4000.weights"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" CUDA-version: 11000 (11020), cuDNN: 7.6.5, CUDNN_HALF=1, GPU count: 1  \n"," CUDNN_HALF=1 \n"," OpenCV version: 3.2.0\n"," 0 : compute_capability = 750, cudnn_half = 1, GPU: Tesla T4 \n","net.optimized_memory = 0 \n","mini_batch = 1, batch = 16, time_steps = 1, train = 0 \n","   layer   filters  size/strd(dil)      input                output\n","   0 Create CUDA-stream - 0 \n"," Create cudnn-handle 0 \n","conv     32       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  32 0.299 BF\n","   1 conv     64       3 x 3/ 2    416 x 416 x  32 ->  208 x 208 x  64 1.595 BF\n","   2 conv     64       1 x 1/ 1    208 x 208 x  64 ->  208 x 208 x  64 0.354 BF\n","   3 route  1 \t\t                           ->  208 x 208 x  64 \n","   4 conv     64       1 x 1/ 1    208 x 208 x  64 ->  208 x 208 x  64 0.354 BF\n","   5 conv     32       1 x 1/ 1    208 x 208 x  64 ->  208 x 208 x  32 0.177 BF\n","   6 conv     64       3 x 3/ 1    208 x 208 x  32 ->  208 x 208 x  64 1.595 BF\n","   7 Shortcut Layer: 4,  wt = 0, wn = 0, outputs: 208 x 208 x  64 0.003 BF\n","   8 conv     64       1 x 1/ 1    208 x 208 x  64 ->  208 x 208 x  64 0.354 BF\n","   9 route  8 2 \t                           ->  208 x 208 x 128 \n","  10 conv     64       1 x 1/ 1    208 x 208 x 128 ->  208 x 208 x  64 0.709 BF\n","  11 conv    128       3 x 3/ 2    208 x 208 x  64 ->  104 x 104 x 128 1.595 BF\n","  12 conv     64       1 x 1/ 1    104 x 104 x 128 ->  104 x 104 x  64 0.177 BF\n","  13 route  11 \t\t                           ->  104 x 104 x 128 \n","  14 conv     64       1 x 1/ 1    104 x 104 x 128 ->  104 x 104 x  64 0.177 BF\n","  15 conv     64       1 x 1/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.089 BF\n","  16 conv     64       3 x 3/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.797 BF\n","  17 Shortcut Layer: 14,  wt = 0, wn = 0, outputs: 104 x 104 x  64 0.001 BF\n","  18 conv     64       1 x 1/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.089 BF\n","  19 conv     64       3 x 3/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.797 BF\n","  20 Shortcut Layer: 17,  wt = 0, wn = 0, outputs: 104 x 104 x  64 0.001 BF\n","  21 conv     64       1 x 1/ 1    104 x 104 x  64 ->  104 x 104 x  64 0.089 BF\n","  22 route  21 12 \t                           ->  104 x 104 x 128 \n","  23 conv    128       1 x 1/ 1    104 x 104 x 128 ->  104 x 104 x 128 0.354 BF\n","  24 conv    256       3 x 3/ 2    104 x 104 x 128 ->   52 x  52 x 256 1.595 BF\n","  25 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n","  26 route  24 \t\t                           ->   52 x  52 x 256 \n","  27 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n","  28 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n","  29 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n","  30 Shortcut Layer: 27,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n","  31 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n","  32 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n","  33 Shortcut Layer: 30,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n","  34 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n","  35 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n","  36 Shortcut Layer: 33,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n","  37 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n","  38 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n","  39 Shortcut Layer: 36,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n","  40 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n","  41 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n","  42 Shortcut Layer: 39,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n","  43 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n","  44 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n","  45 Shortcut Layer: 42,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n","  46 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n","  47 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n","  48 Shortcut Layer: 45,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n","  49 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n","  50 conv    128       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.797 BF\n","  51 Shortcut Layer: 48,  wt = 0, wn = 0, outputs:  52 x  52 x 128 0.000 BF\n","  52 conv    128       1 x 1/ 1     52 x  52 x 128 ->   52 x  52 x 128 0.089 BF\n","  53 route  52 25 \t                           ->   52 x  52 x 256 \n","  54 conv    256       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 256 0.354 BF\n","  55 conv    512       3 x 3/ 2     52 x  52 x 256 ->   26 x  26 x 512 1.595 BF\n","  56 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n","  57 route  55 \t\t                           ->   26 x  26 x 512 \n","  58 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n","  59 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n","  60 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n","  61 Shortcut Layer: 58,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n","  62 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n","  63 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n","  64 Shortcut Layer: 61,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n","  65 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n","  66 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n","  67 Shortcut Layer: 64,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n","  68 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n","  69 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n","  70 Shortcut Layer: 67,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n","  71 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n","  72 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n","  73 Shortcut Layer: 70,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n","  74 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n","  75 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n","  76 Shortcut Layer: 73,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n","  77 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n","  78 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n","  79 Shortcut Layer: 76,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n","  80 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n","  81 conv    256       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.797 BF\n","  82 Shortcut Layer: 79,  wt = 0, wn = 0, outputs:  26 x  26 x 256 0.000 BF\n","  83 conv    256       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 256 0.089 BF\n","  84 route  83 56 \t                           ->   26 x  26 x 512 \n","  85 conv    512       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 512 0.354 BF\n","  86 conv   1024       3 x 3/ 2     26 x  26 x 512 ->   13 x  13 x1024 1.595 BF\n","  87 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n","  88 route  86 \t\t                           ->   13 x  13 x1024 \n","  89 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n","  90 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n","  91 conv    512       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.797 BF\n","  92 Shortcut Layer: 89,  wt = 0, wn = 0, outputs:  13 x  13 x 512 0.000 BF\n","  93 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n","  94 conv    512       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.797 BF\n","  95 Shortcut Layer: 92,  wt = 0, wn = 0, outputs:  13 x  13 x 512 0.000 BF\n","  96 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n","  97 conv    512       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.797 BF\n","  98 Shortcut Layer: 95,  wt = 0, wn = 0, outputs:  13 x  13 x 512 0.000 BF\n","  99 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n"," 100 conv    512       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.797 BF\n"," 101 Shortcut Layer: 98,  wt = 0, wn = 0, outputs:  13 x  13 x 512 0.000 BF\n"," 102 conv    512       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.089 BF\n"," 103 route  102 87 \t                           ->   13 x  13 x1024 \n"," 104 conv   1024       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x1024 0.354 BF\n"," 105 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n"," 106 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n"," 107 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n"," 108 max                5x 5/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.002 BF\n"," 109 route  107 \t\t                           ->   13 x  13 x 512 \n"," 110 max                9x 9/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.007 BF\n"," 111 route  107 \t\t                           ->   13 x  13 x 512 \n"," 112 max               13x13/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.015 BF\n"," 113 route  112 110 108 107 \t                   ->   13 x  13 x2048 \n"," 114 conv    512       1 x 1/ 1     13 x  13 x2048 ->   13 x  13 x 512 0.354 BF\n"," 115 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n"," 116 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n"," 117 conv    256       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 256 0.044 BF\n"," 118 upsample                 2x    13 x  13 x 256 ->   26 x  26 x 256\n"," 119 route  85 \t\t                           ->   26 x  26 x 512 \n"," 120 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n"," 121 route  120 118 \t                           ->   26 x  26 x 512 \n"," 122 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n"," 123 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n"," 124 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n"," 125 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n"," 126 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n"," 127 conv    128       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 128 0.044 BF\n"," 128 upsample                 2x    26 x  26 x 128 ->   52 x  52 x 128\n"," 129 route  54 \t\t                           ->   52 x  52 x 256 \n"," 130 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n"," 131 route  130 128 \t                           ->   52 x  52 x 256 \n"," 132 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n"," 133 conv    256       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 256 1.595 BF\n"," 134 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n"," 135 conv    256       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 256 1.595 BF\n"," 136 conv    128       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x 128 0.177 BF\n"," 137 conv    256       3 x 3/ 1     52 x  52 x 128 ->   52 x  52 x 256 1.595 BF\n"," 138 conv     18       1 x 1/ 1     52 x  52 x 256 ->   52 x  52 x  18 0.025 BF\n"," 139 yolo\n","[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.20\n","nms_kind: greedynms (1), beta = 0.600000 \n"," 140 route  136 \t\t                           ->   52 x  52 x 128 \n"," 141 conv    256       3 x 3/ 2     52 x  52 x 128 ->   26 x  26 x 256 0.399 BF\n"," 142 route  141 126 \t                           ->   26 x  26 x 512 \n"," 143 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n"," 144 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n"," 145 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n"," 146 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n"," 147 conv    256       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x 256 0.177 BF\n"," 148 conv    512       3 x 3/ 1     26 x  26 x 256 ->   26 x  26 x 512 1.595 BF\n"," 149 conv     18       1 x 1/ 1     26 x  26 x 512 ->   26 x  26 x  18 0.012 BF\n"," 150 yolo\n","[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.10\n","nms_kind: greedynms (1), beta = 0.600000 \n"," 151 route  147 \t\t                           ->   26 x  26 x 256 \n"," 152 conv    512       3 x 3/ 2     26 x  26 x 256 ->   13 x  13 x 512 0.399 BF\n"," 153 route  152 116 \t                           ->   13 x  13 x1024 \n"," 154 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n"," 155 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n"," 156 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n"," 157 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n"," 158 conv    512       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 512 0.177 BF\n"," 159 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF\n"," 160 conv     18       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x  18 0.006 BF\n"," 161 yolo\n","[yolo] params: iou loss: ciou (4), iou_norm: 0.07, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.05\n","nms_kind: greedynms (1), beta = 0.600000 \n","Total BFLOPS 59.563 \n","avg_outputs = 489778 \n"," Allocate additional workspace_size = 52.43 MB \n","Loading weights from /content/gdrive/MyDrive/yolov4_result_code/ver6/backup/yolov4-custom_4000.weights...\n"," seen 64, trained: 256 K-images (4 Kilo-batches_64) \n","Done! Loaded 162 layers from weights-file \n","\n"," calculation mAP (mean average precision)...\n"," Detection layer: 139 - type = 28 \n"," Detection layer: 150 - type = 28 \n"," Detection layer: 161 - type = 28 \n","400\n"," detections_count = 928, unique_truth_count = 675  \n","class_id = 0, name = take-out-coffee, ap = 97.24%   \t (TP = 651, FP = 34) \n","\n"," for conf_thresh = 0.25, precision = 0.95, recall = 0.96, F1-score = 0.96 \n"," for conf_thresh = 0.25, TP = 651, FP = 34, FN = 24, average IoU = 80.01 % \n","\n"," IoU threshold = 50 %, used Area-Under-Curve for each unique Recall \n"," mean average precision (mAP@0.50) = 0.972350, or 97.24 % \n","Total Detection Time: 16 Seconds\n","\n","Set -points flag:\n"," `-points 101` for MS COCO \n"," `-points 11` for PascalVOC 2007 (uncomment `difficult` in voc.data) \n"," `-points 0` (AUC) for ImageNet, PascalVOC 2010-2012, your custom dataset\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"UsgzAmcX8qG7"},"source":["+ 사진, 영상에서 detection"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ne_Py3rkpIwr","executionInfo":{"elapsed":827,"status":"ok","timestamp":1619194800608,"user":{"displayName":"양은서","photoUrl":"","userId":"13524925174389274877"},"user_tz":-540},"outputId":"3f37a555-e82e-46d7-c492-c3003f606343"},"source":["%cd cfg\n","!sed -i 's/batch=64/batch=1/' yolov4-custom.cfg\n","!sed -i 's/subdivisions=16/subdivisions=1/' yolov4-custom.cfg\n","%cd .."],"execution_count":null,"outputs":[{"output_type":"stream","text":["/content/darknet/cfg\n","/content/darknet\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"s052wBFo3xNn"},"source":["#test 폴더에 있던 사진으로 해보기\n","!./darknet detector test /content/gdrive/MyDrive/졸프/yolov4_result_code/ver4/custom.data cfg/yolov4-custom.cfg /content/gdrive/MyDrive/졸프/yolov4_result_code/ver4/backup/yolov4-custom_best.weights -ext_output dog.jpg"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IApzrtpTTtvo"},"source":["!./darknet detector demo /content/gdrive/MyDrive/yolov4_result_code/ver6/custom.data cfg/yolov4-custom.cfg /content/gdrive/MyDrive/yolov4_result_code/ver6/backup/yolov4-custom_final.weights /content/gdrive/MyDrive/yolov4_result_code/테스트영상.mp4 -thresh 0.3 -dont_show -out_filename test2_detect.mp4"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"uTpRRYURGEeB","executionInfo":{"status":"ok","timestamp":1620362788736,"user_tz":-540,"elapsed":1068,"user":{"displayName":"양은서","photoUrl":"","userId":"11771374411932328607"}},"outputId":"0ca1aaaf-41e7-4dea-a9ad-193bdcd066d5"},"source":["def download(path):\n","  from google.colab import files\n","  files.download(path)\n","download('test2_detect.mp4')\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_f1399b10-2741-4cf6-988b-597de33d2ce2\", \"test2_detect.mp4\", 130402730)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{"tags":[]}}]}]}
